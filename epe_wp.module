<?php

/*function epe_wp_default_roles() {
  $role = new stdClass();
  $role->name = 'author';
  user_role_save($role);
}*/
/**
 * Implements hook_views_api().
 */
function epe_wp_views_api() {
  return array("api" => "3.0");
}

/**
  * Implement hook_permission
  */
function epe_wp_permission() {
  return array(
    'epe wp view pending resource list' => array(
      'title' => 'EPE WP view pending resource list',
      'description' => 'Allow user to view list of pending resources.',
    ),
  );
}


function _account_installed_fields() {
  $fields = array();

  // Exported field_base: 'field_account_country'
  $fields['user-user-field_account_country'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_country',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        'US' => 'United States',
        'CA' => 'Canada',
        'NULL' => '----------',
        'AF' => 'Afghanistan',
        'AX' => 'Åland Islands',
        'AL' => 'Albania',
        'DZ' => 'Algeria',
        'AS' => 'American Samoa',
        'AD' => 'Andorra',
        'AO' => 'Angola',
        'AI' => 'Anguilla',
        'AQ' => 'Antarctica',
        'AG' => 'Antigua/Barbuda',
        'AR' => 'Argentina',
        'AM' => 'Armenia',
        'AW' => 'Aruba',
        'AT' => 'Austria',
        'AU' => 'Australia',
        'AZ' => 'Azerbaijan',
        'BS' => 'Bahamas',
        'BH' => 'Bahrain',
        'BD' => 'Bangladesh',
        'BB' => 'Barbados',
        'BY' => 'Belarus',
        'BE' => 'Belgium',
        'BZ' => 'Belize',
        'BJ' => 'Benin',
        'BM' => 'Bermuda',
        'BT' => 'Bhutan',
        'BO' => 'Bolivia',
        'BA' => 'Bosnia/Herzegovina',
        'BW' => 'Botswana',
        'BV' => 'Bouvet Island',
        'BR' => 'Brazil',
        'BN' => 'Brunei Darussalam',
        'BG' => 'Bulgaria',
        'BF' => 'Burkina Faso',
        'BI' => 'Burundi',
        'KH' => 'Cambodia',
        'CM' => 'Cameroon',
        'CV' => 'Cape Verde',
        'KY' => 'Cayman Islands',
        'CF' => 'Central African Republic',
        'TD' => 'Chad',
        'CL' => 'Chile',
        'CN' => 'China',
        'CX' => 'Christmas Island',
        'CC' => 'Cocos (Keeling) Islands',
        'CO' => 'Colombia',
        'KM' => 'Comoros',
        'CG' => 'Congo',
        'CK' => 'Cook Islands',
        'CR' => 'Costa Rica',
        'CI' => 'Côte D\'Ivoire',
        'HR' => 'Croatia',
        'CU' => 'Cuba',
        'CY' => 'Cyprus',
        'CZ' => 'Czech Republic',
        'DK' => 'Denmark',
        'DJ' => 'Djibouti',
        'DM' => 'Dominica',
        'DO' => 'Dominican Republic',
        'EC' => 'Ecuador',
        'EG' => 'Egypt',
        'SV' => 'El Salvador',
        'GQ' => 'Equatorial Guinea',
        'ER' => 'Eritrea',
        'EE' => 'Estonia',
        'ET' => 'Ethiopia',
        'FK' => 'Falkland Islands(Malvinas)',
        'FO' => 'Faroe Islands',
        'FJ' => 'Fiji',
        'FI' => 'Finland',
        'FR' => 'France',
        'GF' => 'French Guiana',
        'PF' => 'French Polynesia',
        'TF' => 'French Southern Territories',
        'GA' => 'Gabon',
        'GM' => 'Gambia',
        'GE' => 'Georgia',
        'DE' => 'Germany',
        'GH' => 'Ghana',
        'GI' => 'Gibraltar',
        'GR' => 'Greece',
        'GL' => 'Greenland',
        'GD' => 'Grenada',
        'GP' => 'Guadeloupe',
        'GU' => 'Guam',
        'GT' => 'Guatemala',
        'GG' => 'Guernsey',
        'GN' => 'Guinea',
        'GW' => 'Guinea-Bissau',
        'GY' => 'Guyana',
        'HT' => 'Haiti',
        'HM' => 'Heard Island/Mcdonald Islands',
        'HN' => 'Honduras',
        'HK' => 'Hong Kong',
        'HU' => 'Hungary',
        'IS' => 'Iceland',
        'IN' => 'India',
        'ID' => 'Indonesia',
        'IR' => 'Iran',
        'IQ' => 'Iraq',
        'IE' => 'Ireland',
        'IM' => 'Isle Of Man',
        'IL' => 'Israel',
        'IT' => 'Italy',
        'JM' => 'Jamaica',
        'JP' => 'Japan',
        'JE' => 'Jersey',
        'JO' => 'Jordan',
        'KZ' => 'Kazakhstan',
        'KE' => 'Kenya',
        'KI' => 'Kiribati',
        'KW' => 'Kuwait',
        'KG' => 'Kyrgyzstan',
        'LA' => 'Lao',
        'LV' => 'Latvia',
        'LB' => 'Lebanon',
        'LS' => 'Lesotho',
        'LR' => 'Liberia',
        'LY' => 'Libyan Arab Jamahiriya',
        'LI' => 'Liechtenstein',
        'LT' => 'Lithuania',
        'LU' => 'Luxembourg',
        'MO' => 'Macao',
        'MK' => 'Macedonia',
        'MG' => 'Madagascar',
        'MW' => 'Malawi',
        'MY' => 'Malaysia',
        'MV' => 'Maldives',
        'ML' => 'Mali',
        'MT' => 'Malta',
        'MH' => 'Marshall Islands',
        'MQ' => 'Martinique',
        'MR' => 'Mauritania',
        'MU' => 'Mauritius',
        'YT' => 'Mayotte',
        'MX' => 'Mexico',
        'FM' => 'Micronesia',
        'MD' => 'Moldova',
        'MC' => 'Monaco',
        'MN' => 'Mongolia',
        'ME' => 'Montenegro',
        'MS' => 'Montserrat',
        'MA' => 'Morocco',
        'MZ' => 'Mozambique',
        'MM' => 'Myanmar',
        'NA' => 'Namibia',
        'NR' => 'Nauru',
        'NP' => 'Nepal',
        'NL' => 'Netherlands',
        'AN' => 'Netherlands Antilles',
        'NC' => 'New Caledonia',
        'NZ' => 'New Zealand',
        'NI' => 'Nicaragua',
        'NE' => 'Niger',
        'NG' => 'Nigeria',
        'NU' => 'Niue',
        'NF' => 'Norfolk Island',
        'KP' => 'North Korea',
        'MP' => 'Northern Mariana Islands',
        'NO' => 'Norway',
        'OM' => 'Oman',
        'PK' => 'Pakistan',
        'PW' => 'Palau',
        'PS' => 'Palestine',
        'PA' => 'Panama',
        'PG' => 'Papua New Guinea',
        'PY' => 'Paraguay',
        'PE' => 'Peru',
        'PH' => 'Philippines',
        'PN' => 'Pitcairn',
        'PL' => 'Poland',
        'PT' => 'Portugal',
        'PR' => 'Puerto Rico',
        'QA' => 'Qatar',
        'RE' => 'Réunion',
        'RO' => 'Romania',
        'RU' => 'Russian Federation',
        'RW' => 'Rwanda',
        'BL' => 'St. Barthélemy',
        'SH' => 'St. Helena',
        'KN' => 'St. Kitts/Nevis',
        'LC' => 'St. Lucia',
        'MF' => 'St. Martin',
        'PM' => 'St. Pierre/Miquelon',
        'VC' => 'St. Vincent/The Grenadines',
        'WS' => 'Samoa',
        'SM' => 'San Marino',
        'ST' => 'Sao Tome/Principe',
        'SA' => 'Saudi Arabia',
        'SN' => 'Senegal',
        'RS' => 'Serbia',
        'SC' => 'Seychelles',
        'SL' => 'Sierra Leone',
        'SG' => 'Singapore',
        'SK' => 'Slovakia',
        'SI' => 'Slovenia',
        'SB' => 'Solomon Islands',
        'SO' => 'Somalia',
        'ZA' => 'South Africa',
        'GS' => 'South Georgia/Sandwich Islands',
        'KR' => 'South Korea',
        'ES' => 'Spain',
        'LK' => 'Sri Lanka',
        'SD' => 'Sudan',
        'SR' => 'Suriname',
        'SJ' => 'Svalbard/Jan Mayen',
        'SZ' => 'Swaziland',
        'SE' => 'Sweden',
        'CH' => 'Switzerland',
        'SY' => 'Syrian Arab Republic',
        'TW' => 'Taiwan',
        'TJ' => 'Tajikistan',
        'TZ' => 'Tanzania',
        'TH' => 'Thailand',
        'TL' => 'Timor-Leste',
        'TG' => 'Togo',
        'TK' => 'Tokelau',
        'TO' => 'Tonga',
        'TT' => 'Trinidad And Tobago',
        'TN' => 'Tunisia',
        'TR' => 'Turkey',
        'TM' => 'Turkmenistan',
        'TC' => 'Turks/Caicos Islands',
        'TV' => 'Tuvalu',
        'UG' => 'Uganda',
        'UA' => 'Ukraine',
        'AE' => 'United Arab Emirates',
        'GB' => 'United Kingdom',
        'UM' => 'United States Minor Islands',
        'UY' => 'Uruguay',
        'UZ' => 'Uzbekistan',
        'VU' => 'Vanuatu',
        'VA' => 'Vatican City State',
        'VE' => 'Venezuela',
        'VN' => 'Viet Nam',
        'VG' => '"Virgin Islands, British"',
        'VI' => '"Virgin Islands, U.S."',
        'WF' => 'Wallis/Futuna',
        'EH' => 'Western Sahara',
        'YE' => 'Yemen',
        'ZM' => 'Zambia',
        'ZW' => 'Zimbabwe',
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_text',
  );

  // Exported field_base: 'field_account_description'
  $fields['user-user-field_account_description'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_description',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );

  // Exported field_base: 'field_account_fname'
  $fields['user-user-field_account_fname'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_fname',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_account_job_role'
  $fields['user-user-field_account_job_role'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_job_role',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        'Formal Educator (K12)' => 'Formal Educator (K12)',
        'Formal Educator (Undergraduate)' => 'Formal Educator (Undergraduate)',
        'Informal Educator' => 'Informal Educator',
        'Student (K12)' => 'Student (K12)',
        'Undergraduate Student' => 'Undergraduate Student',
        'Graduate Student' => 'Graduate Student',
        'Researcher' => 'Researcher',
        'University Faculty' => 'University Faculty',
        'Other' => 'Other',
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_text',
  );

  // Exported field_base: 'field_account_lname'
  $fields['user-user-field_account_lname'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_lname',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_account_location'
  $fields['user-user-field_account_location'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_location',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_account_organization'
  $fields['user-user-field_account_organization'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_organization',
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(
      'max_length' => 255,
    ),
    'translatable' => 0,
    'type' => 'text',
  );

  // Exported field_base: 'field_account_profile_visibility'
  $fields['user-user-field_account_profile_visibility'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_account_profile_visibility',
    'foreign keys' => array(),
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        'Public' => 'Allow all users to see my information',
        'Authenticated' => 'Allow only logged in users to see my information',
        'Private' => 'Keep my information private',
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_text',
  );

  return $fields;
}

function _account_installed_instances() {
  $instances = array();

  // Exported field_instance: 'user-user-field_account_country'
  $instances['user-user-field_account_country'] = array(
    'bundle' => 'user',
    'default_value' => array(
      0 => array(
        'value' => 'US',
      ),
    ),
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_country',
    'label' => 'Country',
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 7,
    ),
  );

  // Exported field_instance: 'user-user-field_account_description'
  $instances['user-user-field_account_description'] = array(
    'bundle' => 'user',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Any information that you provide will be viewable on your profile page',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 6,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_description',
    'label' => 'Describe Yourself',
    'required' => 0,
    'settings' => array(
      'better_formats' => array(
        'allowed_formats' => array(
          'filtered_html' => 'filtered_html',
          'full_html' => 'full_html',
          'plain_text' => 'plain_text',
        ),
        'allowed_formats_toggle' => 0,
        'default_order_toggle' => 0,
        'default_order_wrapper' => array(
          'formats' => array(
            'filtered_html' => array(
              'weight' => 0,
            ),
            'full_html' => array(
              'weight' => 1,
            ),
            'plain_text' => array(
              'weight' => 10,
            ),
          ),
        ),
      ),
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 12,
      ),
      'type' => 'text_textarea',
      'weight' => 8,
    ),
  );

  // Exported field_instance: 'user-user-field_account_fname'
  $instances['user-user-field_account_fname'] = array(
    'bundle' => 'user',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_fname',
    'label' => 'First Name',
    'required' => 0,
    'settings' => array(
      'better_formats' => array(
        'allowed_formats' => array(
          'filtered_html' => 'filtered_html',
          'full_html' => 'full_html',
          'plain_text' => 'plain_text',
        ),
        'allowed_formats_toggle' => 0,
        'default_order_toggle' => 0,
        'default_order_wrapper' => array(
          'formats' => array(
            'filtered_html' => array(
              'weight' => 0,
            ),
            'full_html' => array(
              'weight' => 1,
            ),
            'plain_text' => array(
              'weight' => 10,
            ),
          ),
        ),
      ),
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 2,
    ),
  );

  // Exported field_instance: 'user-user-field_account_job_role'
  $instances['user-user-field_account_job_role'] = array(
    'bundle' => 'user',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_job_role',
    'label' => 'Job Role',
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'user-user-field_account_lname'
  $instances['user-user-field_account_lname'] = array(
    'bundle' => 'user',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_lname',
    'label' => 'Last Name',
    'required' => 0,
    'settings' => array(
      'better_formats' => array(
        'allowed_formats' => array(
          'filtered_html' => 'filtered_html',
          'full_html' => 'full_html',
          'plain_text' => 'plain_text',
        ),
        'allowed_formats_toggle' => 0,
        'default_order_toggle' => 0,
        'default_order_wrapper' => array(
          'formats' => array(
            'filtered_html' => array(
              'weight' => 0,
            ),
            'full_html' => array(
              'weight' => 1,
            ),
            'plain_text' => array(
              'weight' => 10,
            ),
          ),
        ),
      ),
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'user-user-field_account_location'
  $instances['user-user-field_account_location'] = array(
    'bundle' => 'user',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 3,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_location',
    'label' => 'City / State / Province',
    'required' => 0,
    'settings' => array(
      'better_formats' => array(
        'allowed_formats' => array(
          'filtered_html' => 'filtered_html',
          'full_html' => 'full_html',
          'plain_text' => 'plain_text',
        ),
        'allowed_formats_toggle' => 0,
        'default_order_toggle' => 0,
        'default_order_wrapper' => array(
          'formats' => array(
            'filtered_html' => array(
              'weight' => 0,
            ),
            'full_html' => array(
              'weight' => 1,
            ),
            'plain_text' => array(
              'weight' => 10,
            ),
          ),
        ),
      ),
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 6,
    ),
  );

  // Exported field_instance: 'user-user-field_account_organization'
  $instances['user-user-field_account_organization'] = array(
    'bundle' => 'user',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 2,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_organization',
    'label' => 'Institution / School',
    'required' => 0,
    'settings' => array(
      'better_formats' => array(
        'allowed_formats' => array(
          'filtered_html' => 'filtered_html',
          'full_html' => 'full_html',
          'plain_text' => 'plain_text',
        ),
        'allowed_formats_toggle' => 0,
        'default_order_toggle' => 0,
        'default_order_wrapper' => array(
          'formats' => array(
            'filtered_html' => array(
              'weight' => 0,
            ),
            'full_html' => array(
              'weight' => 1,
            ),
            'plain_text' => array(
              'weight' => 10,
            ),
          ),
        ),
      ),
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 5,
    ),
  );

  // Exported field_instance: 'user-user-field_account_profile_visibility'
  $instances['user-user-field_account_profile_visibility'] = array(
    'bundle' => 'user',
    'default_value' => array(
      0 => array(
        'value' => 'Public',
      ),
    ),
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 7,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'field_account_profile_visibility',
    'label' => 'Profile Visibility',
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 9,
    ),
  );

  return $instances;
}


function epe_wp_block_info_alter(&$blocks, $theme, $code_blocks) {
  $blocks['system']['navigation']['status'] = 0;
  $blocks['system']['powered-by']['status'] = 0;
  $blocks['user']['login']['status'] = 0;
  $blocks['search']['form']['status'] = 0;
}


function epe_wp_menu_alter(&$items) {
    // Change the title of user profile pages to the user's name.  Gak.
    $items['user/%user']['title callback'] = 'epe_wp_user_page_title';
}

function epe_wp_user_page_title() {
    if (arg(0) == 'user') {
        // Load uid from url
        $user = user_load(arg(1));
        if (isset($user->field_account_fname['und'][0]['safe_value']) && isset($user->field_account_lname['und'][0]['safe_value']))
        $output = trim($user->field_account_fname['und'][0]['safe_value'] . ' ' . $user->field_account_lname['und'][0]['safe_value']);
    }
    // Fallback to username if no fields are present
    if (empty($output)) {
        $output = $user->name;
    }
    return 'Member Profile: ' . $output;
}


function epe_wp_menu() {
  $items = array();

/*  $items['home'] = array(
    'title' => t('EPE Home Page'),
    'page callback' => 'epe_wp_epe_home',
    'file' => 'epe_wp.pages.inc',
    'file path' => drupal_get_path('module', 'epe_wp') . '/inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );
*/

  $items['ev'] = array(
    'title' => t('Visualizations'),
    'page callback' => 'epe_wp_ev_home',
    'file' => 'epe_wp.pages.inc',
    'file path' => drupal_get_path('module', 'epe_wp') . '/inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'weight' => 1,
    'type' => MENU_NORMAL_ITEM,
  );

  $items['cm'] = array(
    'title' => t('Concept Maps'),
    'page callback' => 'epe_wp_cm_home',
    'file' => 'epe_wp.pages.inc',
    'file path' => drupal_get_path('module', 'epe_wp') . '/inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'weight' => 2,
    'type' => MENU_NORMAL_ITEM,
  );

/*  $items['llb'] = array(
    'title' => t('Lessons'),
    'page callback' => 'epe_wp_llb_home',
    'file' => 'epe_wp.pages.inc',
    'file path' => drupal_get_path('module', 'epe_wp') . '/inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'weight' => 3,
    'type' => MENU_NORMAL_ITEM,
  );*/

/*  $items['db'] = array(
    'title' => t('Resources'),
    'page callback' => 'epe_wp_db_home',
    'file' => 'epe_wp.pages.inc',
    'file path' => drupal_get_path('module', 'epe_wp') . '/inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );*/

  return $items;
}

function epe_wp_block_info() {
  $blocks['epe_wp_top_menu_links'] = array(
    'info' => t('EPE WP Top Menu Links'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['epe_cm_featured'] = array(
    'info' => t('EPE Featured CM Resources'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['epe_ev_featured'] = array(
    'info' => t('EPE Featured Visualization Resources'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['epe_db_featured'] = array(
    'info' => t('EPE Featured Resources'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;

}

function epe_wp_block_view($delta = '') {
  $block = array();
  $block['title'] = t('<none>');
  $block['content'] = '';

  switch ($delta) {
    case 'epe_wp_top_menu_links':
      $block['content'] = '<ul><li><a href="' . base_path() . 'about"><div>About</div>the OOI</a></li><li><a href="' . base_path() . 'learn"><div>Learn</div>to Use Our Tools</a></li><li><a href="' . base_path() . 'teach"><div>Teach</div>with Data</a></li></ul>';
    break;

    case 'epe_cm_featured':
      $block['title'] = t('Featured CM Resources');
      $block['content'] = theme('epe_featured_block', array('type'=>array('cm_resource')));
    break;

    case 'epe_ev_featured':
      $block['title'] = t('Featured Visualization Resources');
      $block['content'] = theme('epe_featured_block', array('type'=>array('ev_tool_instance')));
    break;

    case 'epe_db_featured':
      $block['title'] = t('Featured Resources');
      $block['content'] = theme('epe_featured_block');
    break;
  }

  return $block;
}

function epe_wp_theme() {
  $tpl_path = drupal_get_path('module','epe_wp') . '/templates/';
  return array(
    'epe_ev_homepage' => array(
      'path' => $tpl_path,
      'template' => 'epe_ev_homepage',
    ),
    'epe_cm_homepage' => array(
      'path' => $tpl_path,
      'template' => 'epe_cm_homepage',
    ),
    'epe_featured_block' => array(
      'path' => $tpl_path,
      'template' => 'epe_featured_block',
      'variables' => array(
        'type' => array(),
      ),
    ),
  );
}



function epe_wp_form_user_register_form_alter(&$form, $form_state) {
  // Insert our handler BEFORE user_register_submit().
  // This allows us to add the role before the new user is saved.
  array_unshift($form['#submit'], 'epe_wp_form_user_register_submit');
}

function epe_wp_form_user_register_submit(&$form, &$form_state) {
  $author_role = user_role_load_by_name('author');
  $roles = user_roles(TRUE);
  $form_state['values']['roles'][$author_role->rid] = $roles[$author_role->rid];
}



/*
 * Implement hook_menu_local_tasks_alter()
 * (******NOT USED RIGHT NOW******)
 */
/*
function epe_wp_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $addtabs = false;
  //we want to alter local task for epe resource content type only
  if(arg(0) == 'node' && !arg(2)) {
    $node = node_load(arg(1));
    if($node && node_is_page($node)) {
      foreach(explode(',',RESOURCE_FILE_CONTENT_TYPES) as $type) {
        if($node->type == "{$type}_resource"): $addtabs = true; break; endif;
      }
    }
  }
  //no implementation to copy, publish just yet
  if($addtabs) {
    $copy = array();
    $copy['#theme'] = 'menu_local_task';
    $copy['#link'] = array(
      'path' => 'node/%/copy',
      'load_functions' => array('node_load'),
      'access_callback' => 'node_access',
      'access_arguments' => $data['tabs'][0]['output'][0]['#link']['access_arguments'],
      'title' => t('Copy'),
      'access' => 1,
      'href' => 'node/' . arg(1) . '/copy',
      'tab_root_href' => 'node/' . arg(1),
      'tab_parent_href' => 'node/' . arg(1),
      'localized_options' => array(),
    );
    array_push($data['tabs'][0]['output'], $copy);

    $delete = array();
    $delete['#theme'] = 'menu_local_task';
    $delete['#link'] = array(
      'path' => 'node/%/delete',
      'load_functions' => array('node_load'),
      'access_callback' => 'node_access',
      'access_arguments' => $data['tabs'][0]['output'][0]['#link']['access_arguments'],
      'title' => t('Delete'),
      'access' => 1,
      'href' => 'node/' . arg(1) . '/delete',
      'tab_root_href' => 'node/' . arg(1),
      'tab_parent_href' => 'node/' . arg(1),
      'localized_options' => array(),
    );
    array_push($data['tabs'][0]['output'], $delete);

    $publish = array();
    $publish['#theme'] = 'menu_local_task';
    $publish['#link'] = array(
      'path' => 'node/%/publish',
      'load_functions' => array('node_load'),
      'access_callback' => 'node_access',
      'access_arguments' => $data['tabs'][0]['output'][0]['#link']['access_arguments'],
      'title' => t('Publish'),
      'access' => 1,
      'href' => 'node/' . arg(1) . '/publish',
      'tab_root_href' => 'node/' . arg(1),
      'tab_parent_href' => 'node/' . arg(1),
      'localized_options' => array(),
    );
    array_push($data['tabs'][0]['output'], $publish);
  }
}
*/
