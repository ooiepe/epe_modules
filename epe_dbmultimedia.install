<?php
/*
 * Implement hook_enable
 * this adds epe_multimedia module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbmultimedia_enable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  /*
   * resource_name: identifing which file resource type this module is (use in dbfiles)
   * resource_type: identifing whether module is part of db file resource type or not (use in dbfiles)
   * resource_browser_tab: indentify this content type should be apart of resource browser and some resource browser specific attributes
   */
  $modules['epe_dbmultimedia'] = array('resource_browser' => array('label'=>'Multimedia','api'=>'multimedia','adurl'=>'resource/add/file','weight'=>5));
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * Implement hook_disable
 * this remove epe_multimedia module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbmultimedia_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_dbmultimedia']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * Add allowAdHoc param setting to EPE_CONTENT_MODULES drupal variable
 */
function epe_dbmultimedia_update_7000() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbmultimedia']['resource_browser']['allowAdHoc'] = true;
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * Modify multimedia view's php thumbnail field (default view) to account for no image uplaod and return empty string
 */
function epe_dbaudio_update_7001(&$sandbox) {
  $view = views_get_view('multimedia_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['php']['php_output']  = '<?php
          $node = node_load($data->entity);
          if($node->type == \'video_resource\') {
            $image = field_get_items(\'node\', $node, \'field_video_resource_file\');
            if(!empty($image[0][\'thumbnailfile\'])) echo theme(\'image_style\', array(\'style_name\' => \'resource_browser_thumbnail\', \'path\' => $image[0][\'thumbnailfile\']->uri));
          } else {
            $image = field_get_items(\'node\', $node, \'field_audio_resource_image\');
            $output = \'\';
            if($image) {
            $output = field_view_value(\'node\', $node, \'field_audio_resource_image\', $image[0], array(
              \'type\' => \'image\',
              \'settings\' => array(
                 \'image_style\' => \'resource_browser_thumbnail\',
              ),
            ));
            }
            echo render($output);
          }
        ?>';

  views_save_view($view);
}
