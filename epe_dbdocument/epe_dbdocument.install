<?php

/**
 * Implements hook_install().
 */
function epe_dbdocument_install() {
  //set content type setting variables when content type is created
  variable_set('comment_anonymous_document_resource',0);
  variable_set('comment_default_mode_document_resource',1);
  variable_set('comment_default_per_page_document_resource','50');
  variable_set('comment_image_resource','2');
  variable_set('comment_form_location_document_resource',1);
  variable_set('comment_preview_document_resource','0');
  variable_set('comment_subject_field_document_resource',1);
  variable_set('field_bundle_settings_node__document_resource',array(
    'view_modes' => array(),
    'extra_fields' => array(
      'form' => array(
        'title' => array(
          'weight' => '-5',
        ),
      ),
      'display' => array(),
    ),
  ));
  variable_set('menu_options_document_resource',array());
  variable_set('menu_parent_document_resource','main-menu:0');
  variable_set('node_options_document_resource',array());
  variable_set('node_preview_document_resource','0');
  variable_set('node_submitted_document_resource',0);
}

/*
 * Implement hook_enable
 * this adds epe_document module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbdocument_enable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbdocument'] = array('content_type' => 'document_resource', 'resource_type' => 'file', 'resource_browser' => array('label'=>'Documents','api'=>'document','adurl'=>'resource/add/file','weight'=>6));
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * Implement hook_disable
 * this remove epe_document module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbdocument_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_dbdocument']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * remove content type and all nodes of document resource content type
 */
function epe_dbdocument_uninstall() {
  $results = db_select('node', 'n')
              ->fields('n', array('nid'))
              ->condition('type', array('document_resource'), 'IN')
              ->execute();
  foreach ($results as $result) {
    $nids[] = $result->nid;
  }

  if (!empty($nids)) {
    node_delete_multiple($nids);
  }

  node_type_delete('document_resource');
  $results = db_select('variable','v')
              ->fields('v',array('name'))
              ->condition('name','%document_resource%','LIKE')
              ->execute();
  foreach($results as $result) {
    variable_del($result->name);
  }

  node_types_rebuild();
  menu_rebuild();
}

/**
 * Add allowAdHoc param setting to EPE_CONTENT_MODULES drupal variable
 */
function epe_dbdocument_update_7000() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbdocument']['resource_browser']['allowAdHoc'] = true;
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * Modify document view's php thumbnail field (default view) to account for no image uplaod and return empty string
 */
function epe_dbdocument_update_7001(&$sandbox) {
  $view = views_get_view('document_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['php']['php_output']  = '<?php
          $node = node_load($data->entity);
          $image = field_get_items(\'node\', $node, \'field_document_resource_image\');
          $output = \'\';
          if($image) {
          $output = field_view_value(\'node\', $node, \'field_document_resource_image\', $image[0], array(
            \'type\' => \'image\',
            \'settings\' => array(
               \'image_style\' => \'resource_browser_thumbnail\',
            ),
          ));
          }
    echo render($output);
?>';

  views_save_view($view);
}

/**
 * Make sure the view has the following fields: author name, public status, featured status, and organization
 */
function epe_dbdocument_update_7002(&$sandbox) {
  $view = views_get_view('document_resource_index', TRUE);
  $view->set_display('default');

  /* Field: Author: Institution / School (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['id'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['table'] = 'search_api_index_document_resource_index';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['field'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['label'] = 'org';

  /* Field: Indexed Node: Featured Status */
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['id'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['table'] = 'search_api_index_document_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['field'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['label'] = 'featured';
  /* Field: Indexed Node: Public Status */
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['id'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['table'] = 'search_api_index_document_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['field'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['label'] = 'public';
  /* Field: Author: Name (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_name']['id'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['table'] = 'search_api_index_document_resource_index';
  $view->display[$view->current_display]->display_options['fields']['author_name']['field'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['label'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['element_label_colon'] = FALSE;
  $view->display[$view->current_display]->display_options['fields']['author_name']['link_to_entity'] = 0;

  views_save_view($view);
}

/**
 * add php field for author name to view
 */
function epe_dbdocument_update_7003(&$sandbox) {
  $view = views_get_view('document_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['author_field_account_fname']['exclude'] = TRUE;

  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['exclude'] = TRUE;
  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['label'] = '';
  unset($view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['alter']);

  $view->display[$view->current_display]->display_options['fields']['php_1']['id'] = 'php_1';
  $view->display[$view->current_display]->display_options['fields']['php_1']['table'] = 'views';
  $view->display[$view->current_display]->display_options['fields']['php_1']['field'] = 'php';
  $view->display[$view->current_display]->display_options['fields']['php_1']['label'] = 'author';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_setup'] = 0;
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_output'] = '<?php
  $fullname = array();
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_fname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_fname[\'und\'][0][\'value\'];
  }
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_lname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_lname[\'und\'][0][\'value\'];
  }
  echo implode(\' \',$fullname);
  ?>';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_click_sortable'] = '0';
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_click_sortable'] = '';

  views_save_view($view);
}

/**
 * add credit field and source url field
 */
function epe_dbdocument_update_7004(&$sandbox) {
  module_load_include('inc','epe_dbdocument','inc/epe_dbdocument.field_base.update_7004');
  module_load_include('inc','epe_dbdocument','inc/epe_dbdocument.field_instance.update_7004');

  // Create all the fields we are adding to our content type.
  foreach (_document_resource_installed_fields() as $field) {
    //in case content type share fields
    if(!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  // Create all the instances for our fields.
  foreach (_document_resource_installed_instances() as $instance) {
    if(!field_info_instance('node',$instance['field_name'],'document_resource')) {
      field_create_instance($instance);
    }
  }

  //update credit field instance in case field is already created
  $credit_field_instance = field_info_instance('node','field_credit','document_resource');
  if(!$credit_field_instance['required']) {
    $credit_field_instance['required'] = 1;
    field_update_instance($credit_field_instance);
  }

  $search_api_index = entity_load_single('search_api_index', 'document_resource_index');
  $search_api_index->options['fields']['field_credit'] = array('type'=>'text');
  $search_api_index->options['fields']['field_source_url:url'] = array('type'=>'uri');
  entity_save('search_api_index', $search_api_index);

  $view = views_get_view('document_resource_index', TRUE);
  $view->set_display('default');
  $view->display[$view->current_display]->display_options['fields']['field_credit']['id'] = 'field_credit';
  $view->display[$view->current_display]->display_options['fields']['field_credit']['table'] = 'search_api_index_document_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_credit']['field'] = 'field_credit';
  $view->display[$view->current_display]->display_options['fields']['field_credit']['label'] = 'credit';

  $view->display[$view->current_display]->display_options['fields']['field_source_url']['id'] = 'field_source_url';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['table'] = 'search_api_index_document_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['field'] = 'field_source_url';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['click_sort_column'] = 'url';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['type'] = 'link_plain';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['label'] = 'source_url';

  views_save_view($view);
}

/**
 * update document views to support resource browser
 */
function epe_dbdocument_update_7005(&$sandbox) {
  $search_api_index = entity_load_single('search_api_index', 'document_resource_index');

  $search_api_index->options['fields']['search_api_aggregation_1'] = array('type'=>'text');

  $search_api_index->options['data_alter_callbacks']['search_api_alter_add_aggregation'] = array('status'=>1,'weight'=>0,'settings'=>array(
      'fields'=>array('search_api_aggregation_1'=>array(
        'name'=>'title_main_body_fulltext_search',
        'type'=>'fulltext',
        'fields'=>array('title','body:value'),
        'description'=>'A Fulltext aggregation of the following fields: Title, The main body text.',
        ),
      ),
    ),
  );

  $search_api_index->options['processors']['search_api_case_ignore']['settings']['fields']=array('title'=>true, 'body:value'=>true, 'search_api_aggregation_1'=>true);
  $search_api_index->options['processors']['search_api_html_filter']['settings']['fields']=array('title'=>true, 'body:value'=>true,'search_api_aggregation_1'=>true);

  entity_save('search_api_index', $search_api_index);

  module_load_include('inc','epe_dbdocument','epe_dbdocument.views_default');
  $view_definition = epe_dbdocument_views_default_views();
  views_save_view($view_definition['document_resource_index']);
}
