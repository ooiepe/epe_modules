<?php
/*
 * Implement hook_enable
 * this adds epe_multimedia module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbmultimedia_enable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  /*
   * resource_name: identifing which file resource type this module is (use in dbfiles)
   * resource_type: identifing whether module is part of db file resource type or not (use in dbfiles)
   * resource_browser_tab: indentify this content type should be apart of resource browser and some resource browser specific attributes
   */
  $modules['epe_dbmultimedia'] = array('resource_browser' => array('label'=>'Multimedia','api'=>'multimedia','adurl'=>'resource/add/file','weight'=>5));
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * Implement hook_disable
 * this remove epe_multimedia module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbmultimedia_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_dbmultimedia']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * Add allowAdHoc param setting to EPE_CONTENT_MODULES drupal variable
 */
function epe_dbmultimedia_update_7000() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbmultimedia']['resource_browser']['allowAdHoc'] = true;
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * Modify multimedia view's php thumbnail field (default view) to account for no image uplaod and return empty string
 */
function epe_dbmultimedia_update_7001(&$sandbox) {
  $view = views_get_view('multimedia_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['php']['php_output']  = '<?php
          $node = node_load($data->entity);
          if($node->type == \'video_resource\') {
            $image = field_get_items(\'node\', $node, \'field_video_resource_file\');
            if(!empty($image[0][\'thumbnailfile\'])) echo theme(\'image_style\', array(\'style_name\' => \'resource_browser_thumbnail\', \'path\' => $image[0][\'thumbnailfile\']->uri));
          } else {
            $image = field_get_items(\'node\', $node, \'field_audio_resource_image\');
            $output = \'\';
            if($image) {
            $output = field_view_value(\'node\', $node, \'field_audio_resource_image\', $image[0], array(
              \'type\' => \'image\',
              \'settings\' => array(
                 \'image_style\' => \'resource_browser_thumbnail\',
              ),
            ));
            }
            echo render($output);
          }
        ?>';

  views_save_view($view);
}

/**
 * Make sure the view has the following fields: author name, public status, featured status, and organization
 */
function epe_dbmultimedia_update_7002(&$sandbox) {
  $view = views_get_view('multimedia_resource_index', TRUE);
  $view->set_display('default');

  /* Field: Author: Institution / School (indexed) */
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['id'] = 'author_field_account_organization';
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['table'] = 'search_api_index_multimedia_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['field'] = 'author_field_account_organization';
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['label'] = 'org';

/* Field: Indexed Node: Featured Status */
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['id'] = 'field_featured_status';
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['table'] = 'search_api_index_multimedia_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['field'] = 'field_featured_status';
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['label'] = 'featured';
  /* Field: Indexed Node: Public Status */
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['id'] = 'field_public_status';
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['table'] = 'search_api_index_multimedia_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['field'] = 'field_public_status';
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['label'] = 'public';
  /* Field: Author: Name (indexed) */
  $handler->display[$view->current_display]->display_options['fields']['author_name']['id'] = 'author_name';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['table'] = 'search_api_index_multimedia_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['field'] = 'author_name';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['label'] = 'author_name';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['element_label_colon'] = FALSE;
  $handler->display[$view->current_display]->display_options['fields']['author_name']['link_to_entity'] = 0;

  views_save_view($view);
}

/**
 * add php field for author name to view
 */
function epe_dbmultimedia_update_7003(&$sandbox) {
  $view = views_get_view('multimedia_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['author_field_account_fname']['exclude'] = TRUE;

  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['exclude'] = TRUE;
  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['label'] = '';
  unset($view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['alter']);

  $view->display[$view->current_display]->display_options['fields']['php_1']['id'] = 'php_1';
  $view->display[$view->current_display]->display_options['fields']['php_1']['table'] = 'views';
  $view->display[$view->current_display]->display_options['fields']['php_1']['field'] = 'php';
  $view->display[$view->current_display]->display_options['fields']['php_1']['label'] = 'author';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_setup'] = 0;
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_output'] = '<?php
  $fullname = array();
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_fname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_fname[\'und\'][0][\'value\'];
  }
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_lname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_lname[\'und\'][0][\'value\'];
  }
  echo implode(\' \',$fullname);
  ?>';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_click_sortable'] = '0';
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_click_sortable'] = '';

  views_save_view($view);
}


/**
 * add credit field and source url field
 */
function epe_dbmultimedia_update_7004(&$sandbox) {

  $search_api_index = entity_load_single('search_api_index', 'multimedia_resource_index');
  $search_api_index->options['fields']['field_credit'] = array('type'=>'text');
  $search_api_index->options['fields']['field_source_url:url'] = array('type'=>'uri');
  entity_save('search_api_index', $search_api_index);

  $view = views_get_view('multimedia_resource_index', TRUE);
  $view->set_display('default');
  $view->display[$view->current_display]->display_options['fields']['field_credit']['id'] = 'field_credit';
  $view->display[$view->current_display]->display_options['fields']['field_credit']['table'] = 'search_api_index_multimedia_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_credit']['field'] = 'field_credit';
  $view->display[$view->current_display]->display_options['fields']['field_credit']['label'] = 'credit';

  $view->display[$view->current_display]->display_options['fields']['field_source_url']['id'] = 'field_source_url';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['table'] = 'search_api_index_multimedia_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['field'] = 'field_source_url';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['click_sort_column'] = 'url';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['type'] = 'link_plain';
  $view->display[$view->current_display]->display_options['fields']['field_source_url']['label'] = 'source_url';

  views_save_view($view);
}

/**
 * update multimedia views to support resource browser
 */
function epe_dbmultimedia_update_7005(&$sandbox) {
  $search_api_index = entity_load_single('search_api_index', 'multimedia_resource_index');

  $search_api_index->options['fields']['search_api_aggregation_1'] = array('type'=>'text');

  $search_api_index->options['data_alter_callbacks']['search_api_alter_add_aggregation'] = array('status'=>1,'weight'=>0,'settings'=>array(
      'fields'=>array('search_api_aggregation_1'=>array(
        'name'=>'title_main_body_fulltext_search',
        'type'=>'fulltext',
        'fields'=>array('title','body:value'),
        'description'=>'A Fulltext aggregation of the following fields: Title, The main body text.',
        ),
      ),
    ),
  );

  $search_api_index->options['processors']['search_api_case_ignore']['settings']['fields']=array('title'=>true, 'body:value'=>true, 'search_api_aggregation_1'=>true);
  $search_api_index->options['processors']['search_api_html_filter']['settings']['fields']=array('title'=>true, 'body:value'=>true,'search_api_aggregation_1'=>true);

  entity_save('search_api_index', $search_api_index);

  module_load_include('inc','epe_dbmultimedia','epe_dbmultimedia.views_default');
  $view_definition = epe_dbmultimedia_views_default_views();
  views_save_view($view_definition['multimedia_resource_index']);
}

/**
 * epedev-432: fix title index type to string so it becomes sortable
 */
function epe_dbmultimedia_update_7006(&$sandbox) {
  $search_api_index = entity_load_single('search_api_index', 'multimedia_resource_index');

  $search_api_index->options['fields']['title'] = array('type'=>'string');
  $search_api_index->options['fields']['author:field_account_lname'] = array('type'=>'string');
  $search_api_index->options['fields']['author:field_account_fname'] = array('type'=>'string');
  entity_save('multimedia_resource_index', $search_api_index);

  module_load_include('inc','epe_dbmultimedia','epe_dbmultimedia.views_default');
  $view_definition = epe_dbmultimedia_views_default_views();
  views_save_view($view_definition['multimedia_resource_index']);
}

/**
 * Release 3.4 bug fix:
 * Fix search api index view definition, delete existing search api index and allow hook_default_search_api_index function to create the correct search api index
 * Fix multimedia_resource_index view that misses author_name field
 */
function epe_dbmultimedia_update_7007(&$sandbox) {
  entity_delete('search_api_index','multimedia_resource_index');

  module_load_include('inc','epe_dbmultimedia','epe_dbmultimedia.views_default');
  $view_definition = epe_dbmultimedia_views_default_views();
  views_save_view($view_definition['multimedia_resource_index']);
}

/**
 * epedev-292-293-302:
 * delete and regenerate search api that includes new content type (web resource) and fields
 * update view with new fields and filter condition
 * update ad url in resource browser
 */
function epe_dbmultimedia_update_7008(&$sandbox) {
  entity_delete('search_api_index','multimedia_resource_index');
  module_load_include('inc','epe_dbmultimedia','epe_dbmultimedia.views_default');
  $view_definition = epe_dbmultimedia_views_default_views();
  views_save_view($view_definition['multimedia_resource_index']);

  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbmultimedia']['resource_browser']['adurl'] = 'resource/add/file';
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * patch a problem with resource thumbnail in json output
 */
function epe_dbmultimedia_update_7009(&$sandbox) {
  module_load_include('inc','epe_dbmultimedia','epe_dbmultimedia.views_default');
  $view_definition = epe_dbmultimedia_views_default_views();
  views_save_view($view_definition['multimedia_resource_index']);
}

/**
 * add created field to views output
 */
function epe_dbmultimedia_update_7010(&$sandbox) {
  module_load_include('inc','epe_dbmultimedia','epe_dbmultimedia.views_default');
  $view_definition = epe_dbmultimedia_views_default_views();
  views_save_view($view_definition['multimedia_resource_index']);
}