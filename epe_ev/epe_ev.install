<?php

/**
 * Implements hook_install().
 */
function epe_ev_install() {

  variable_set('comment_anonymous_ev_tool',0);
  variable_set('comment_default_mode_ev_tool',1);
  variable_set('comment_default_per_page_ev_tool','50');
  variable_set('comment_ev_tool','2');
  variable_set('comment_form_location_ev_tool',1);
  variable_set('comment_preview_ev_tool','0');
  variable_set('comment_subject_field_ev_tool',1);
  variable_set('field_bundle_settings_node__ev_tool', array(
      'view_modes' => array(),
      'extra_fields' => array(
        'form' => array(
          'title' => array(
            'weight' => '0',
          ),
        ),
        'display' => array()
      )
    ));

  variable_set('menu_options_ev_tool',array());
  variable_set('menu_parent_ev_tool','main-menu:0');
  variable_set('node_options_ev_tool',array());
  variable_set('node_preview_ev_tool','0');
  variable_set('node_submitted_ev_tool',0);

  variable_set('comment_anonymous_ev_tool_instance',0);
  variable_set('comment_default_mode_ev_tool_instance',1);
  variable_set('comment_default_per_page_ev_tool_instance','50');
  variable_set('comment_ev_tool_instance','2');
  variable_set('comment_form_location_ev_tool_instance',1);
  variable_set('comment_preview_ev_tool_instance','1');
  variable_set('comment_subject_field_ev_tool_instance',1);
  variable_set('field_bundle_settings_node__ev_tool_instance',
    array(
      'view_modes' => array(
        'teaser' => array(
          'custom_settings' => TRUE,
        ),
        'full' => array(
          'custom_settings' => FALSE,
        ),
        'rss' => array(
          'custom_settings' => FALSE,
        ),
        'search_index' => array(
          'custom_settings' => FALSE,
        ),
        'search_result' => array(
          'custom_settings' => FALSE,
        ),
        'token' => array(
          'custom_settings' => FALSE,
        ),
      ),
      'extra_fields' => array(
        'form' => array(
          'title' => array(
            'weight' => '0',
          ),
        ),
        'display' => array(),
      ),
    ));

  // todo: review variables
  variable_set('menu_options_ev_tool_instance', array(
      0 => 'main-menu',
    ));

  variable_set('menu_parent_ev_tool_instance','main-menu:0');

  variable_set('node_options_ev_tool_instance', array(
      0 => 'status',
      1 => 'promote',
    ));

  variable_set('node_preview_ev_tool_instance','1');

  variable_set('node_submitted_ev_tool_instance',1);

  // adjust the weight for template overrides.. must be greater than views weight of 10
  db_query("UPDATE {system} SET weight = 11 WHERE name = 'epe_ev'");

}

/*
 * remove content type and all nodes of image resource content type
 */
function epe_ev_uninstall() {
  $results = db_select('node', 'n')
              ->fields('n', array('nid'))
              ->condition('type', array('ev_tool_instance','ev_tool'), 'IN')
              ->execute();
  foreach ($results as $result) {
    $nids[] = $result->nid;
  }

  if (!empty($nids)) {
    node_delete_multiple($nids);
  }

  node_type_delete('ev_tool');
  node_type_delete('ev_tool_instance');

  $results = db_select('variable','v')
              ->fields('v',array('name'))
              ->condition('name','%ev_tool%','LIKE')
              ->execute();
  foreach($results as $result) {
    variable_del($result->name);
  }

  node_types_rebuild();
  menu_rebuild();
}

function epe_ev_enable() {

  $modules = variable_get('EPE_CONTENT_MODULES',array());

  $modules['epe_ev'] = array(
      'content_type' => 'ev_tool_instance',
      'resource_browser' => array('label'=>'Visualizations','api'=>'ev','adurl'=>'ev/tools','weight'=>2)
    );

  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * Implement hook_disable
 * this remove epe_ev module to epe_content_modules variable which is used in epe_files module
 */
function epe_ev_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_ev']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * EPEDEV-350: update php field in epe_ev_search_view to use the right thumbnail field to render image
 * Running Update.php is required.
 */
function epe_ev_update_7000(&$sandbox) {
  $view = views_get_view('epe_ev_search_view', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['php']['php_output']  =  '<?php
      $node = node_load($data->entity);
      $image = field_get_items(\'node\', $node, \'field_instance_thumbnail\');
      $output = \'\';
      if($image) {
      $output = field_view_value(\'node\', $node, \'field_instance_thumbnail\', $image[0], array(
        \'type\' => \'image\',
        \'settings\' => array(
           \'image_style\' => \'thumbnail\',
        ),
      ));
      }
      echo render($output);
      ?>';

  views_save_view($view);
}

/**
 * Make sure the view has the following fields: author name, public status, featured status, and organization
 */
function epe_ev_update_7001(&$sandbox) {
  $view = views_get_view('epe_ev_search_view', TRUE);
  $view->set_display('default');

  /* Field: Author: Institution / School (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['id'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['table'] = 'search_api_index_epe_ev_search_index';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['field'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['label'] = 'org';

  /* Field: Indexed Node: Featured Status */
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['id'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['table'] = 'search_api_index_epe_ev_search_index';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['field'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['label'] = 'featured';
  /* Field: Indexed Node: Public Status */
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['id'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['table'] = 'search_api_index_epe_ev_search_index';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['field'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['label'] = 'public';
  /* Field: Author: Name (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_name']['id'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['table'] = 'search_api_index_epe_ev_search_index';
  $view->display[$view->current_display]->display_options['fields']['author_name']['field'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['label'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['element_label_colon'] = FALSE;
  $view->display[$view->current_display]->display_options['fields']['author_name']['link_to_entity'] = 0;

  views_save_view($view);
}

/**
 * add php field for author name to view
 */
function epe_ev_update_7002(&$sandbox) {
  $view = views_get_view('epe_ev_search_view', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['author_field_account_fname']['exclude'] = TRUE;

  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['exclude'] = TRUE;
  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['label'] = '';
  unset($view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['alter']);

  $view->display[$view->current_display]->display_options['fields']['php_1']['id'] = 'php_1';
  $view->display[$view->current_display]->display_options['fields']['php_1']['table'] = 'views';
  $view->display[$view->current_display]->display_options['fields']['php_1']['field'] = 'php';
  $view->display[$view->current_display]->display_options['fields']['php_1']['label'] = 'author';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_setup'] = 0;
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_output'] = '<?php
  $fullname = array();
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_fname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_fname[\'und\'][0][\'value\'];
  }
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_lname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_lname[\'und\'][0][\'value\'];
  }
  echo implode(\' \',$fullname);
  ?>';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_click_sortable'] = '0';
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_click_sortable'] = '';

  views_save_view($view);
}

/**
 * epedev-230 create field_source_nid field for ev for clone reference
 */
function epe_ev_update_7003(&$sandbox) {
  module_load_include('inc','epe_ev','inc/epe_ev.field_base.update_7003');
  module_load_include('inc','epe_ev','inc/epe_ev.field_instance.update_7003');
  // Create all the fields we are adding to our content type.
  foreach (_ev_tool_instance_installed_fields() as $field) {
    //in case content type share fields
    if(!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  // Create all the instances for our fields.
  foreach (_ev_tool_instance_installed_instances() as $instance) {
    if(!field_info_instance('node',$instance['field_name'],'ev_tool_instance')) {
      field_create_instance($instance);
    }
  }
}

/**
 * update ev views to support resource browser
 */
function epe_ev_update_7004(&$sandbox) {
  $search_api_index = entity_load_single('search_api_index', 'epe_ev_search_index');

  $search_api_index->options['fields']['search_api_aggregation_1'] = array('type'=>'text');

  $search_api_index->options['data_alter_callbacks']['search_api_alter_add_aggregation'] = array('status'=>1,'weight'=>0,'settings'=>array(
      'fields'=>array('search_api_aggregation_1'=>array(
        'name'=>'title_main_body_fulltext_search',
        'type'=>'fulltext',
        'fields'=>array('title','body:value'),
        'description'=>'A Fulltext aggregation of the following fields: Title, The main body text.',
        ),
      ),
    ),
  );

  $search_api_index->options['processors']['search_api_case_ignore']['settings']['fields']=array('title'=>true, 'body:value'=>true, 'search_api_aggregation_1'=>true);
  $search_api_index->options['processors']['search_api_html_filter']['settings']['fields']=array('title'=>true, 'body:value'=>true,'search_api_aggregation_1'=>true);

  entity_save('search_api_index', $search_api_index);

  module_load_include('inc','epe_ev','epe_ev.views_default');
  $view_definition = epe_ev_views_default_views();
  views_save_view($view_definition['epe_ev_search_view']);
}

/**
 * Post 3.3 release fix: fix epe_ev_search_view view's thumbnail field output code that calls the wrong field and the wrong image style type
 */
function epe_ev_update_7005(&$sandbox) {
  module_load_include('inc','epe_ev','epe_ev.views_default');
  $view_definition = epe_ev_views_default_views();
  views_save_view($view_definition['epe_ev_search_view']);
}

/**
 * updates the ev label
 */
function epe_ev_update_7007(&$sandbox) {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_ev']['resource_browser']['label'] = 'Visualizations';
  variable_set('EPE_CONTENT_MODULES', $modules);
}
