<?php

/**
 * Implements hook_install().
 */
function epe_dbimage_install() {
  //set content type setting variables when content type is created
  variable_set('comment_anonymous_image_resource',0);
  variable_set('comment_default_mode_image_resource',1);
  variable_set('comment_default_per_page_image_resource','50');
  variable_set('comment_form_location_image_resource',1);
  variable_set('comment_image_resource','2');
  variable_set('comment_preview_image_resource','0');
  variable_set('comment_subject_field_image_resource',1);
  variable_set('field_bundle_settings_node__image_resource',array(
    'view_modes' => array(),
    'extra_fields' => array(
      'form' => array(
        'title' => array(
          'weight' => '-5',
        ),
      ),
      'display' => array(),
    ),
  ));
  variable_set('menu_options_image_resource',array());
  variable_set('menu_parent_image_resource','main-menu:0');
  variable_set('node_options_image_resource',array());
  variable_set('node_preview_image_resource','0');
  variable_set('node_submitted_image_resource',0);
}

/*
 * Implement hook_enable
 * this adds epe_image module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbimage_enable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbimage'] = array('content_type' => 'image_resource', 'resource_type' => 'file', 'resource_browser' => array('label'=>'Images','api'=>'image','adurl'=>'resource/add/file','weight'=>4));
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * Implement hook_disable
 * this remove epe_image module to epe_content_modules variable which is used in epe_files module
 */
function epe_dbimage_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_dbimage']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * remove content type and all nodes of image resource content type
 */
function epe_dbimage_uninstall() {
  $results = db_select('node', 'n')
              ->fields('n', array('nid'))
              ->condition('type', array('image_resource'), 'IN')
              ->execute();
  foreach ($results as $result) {
    $nids[] = $result->nid;
  }

  if (!empty($nids)) {
    node_delete_multiple($nids);
  }

  node_type_delete('image_resource');
  $results = db_select('variable','v')
              ->fields('v',array('name'))
              ->condition('name','%image_resource%','LIKE')
              ->execute();
  foreach($results as $result) {
    variable_del($result->name);
  }

  node_types_rebuild();
  menu_rebuild();
}

/**
 * Add allowAdHoc param setting to EPE_CONTENT_MODULES drupal variable
 */
function epe_dbimage_update_7000() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_dbimage']['resource_browser']['allowAdHoc'] = true;
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/**
 * make sure views has the following fields: Org, Featured Status, Public Status, Author Name
 */
function epe_dbimage_update_7001(&$sandbox) {
  $view = views_get_view('image_resource_index', TRUE);
  $view->set_display('default');

  /* Field: Author: Institution / School (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['id'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['table'] = 'search_api_index_image_resource_index';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['field'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['label'] = 'org';

  /* Field: Indexed Node: Featured Status */
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['id'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['table'] = 'search_api_index_image_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['field'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['label'] = 'featured';
  /* Field: Indexed Node: Public Status */
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['id'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['table'] = 'search_api_index_image_resource_index';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['field'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['label'] = 'public';
  /* Field: Author: Name (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_name']['id'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['table'] = 'search_api_index_image_resource_index';
  $view->display[$view->current_display]->display_options['fields']['author_name']['field'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['label'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['element_label_colon'] = FALSE;
  $view->display[$view->current_display]->display_options['fields']['author_name']['link_to_entity'] = 0;

  views_save_view($view);
}
