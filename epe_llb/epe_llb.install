<?php


/**
 * Implements hook_install().
 */
function epe_llb_install() {
  //set content type setting variables when content type is created
  variable_set('comment_anonymous_llb_resource',0);
  variable_set('comment_default_mode_llb_resource',1);
  variable_set('comment_default_per_page_llb_resource','50');
  variable_set('comment_form_location_llb_resource',1);
  variable_set('comment_llb_resource','2');
  variable_set('comment_preview_llb_resource','0');
  variable_set('comment_subject_field_llb_resource',1);
  variable_set('field_bundle_settings_node__llb_resource',array(
    'view_modes' => array(
      'teaser' => array(
        'custom_settings' => TRUE,
      ),
      'full' => array(
        'custom_settings' => FALSE,
      ),
      'rss' => array(
        'custom_settings' => FALSE,
      ),
      'search_index' => array(
        'custom_settings' => FALSE,
      ),
      'search_result' => array(
        'custom_settings' => FALSE,
      ),
      'token' => array(
        'custom_settings' => FALSE,
      ),
      'revision' => array(
        'custom_settings' => FALSE,
      ),
      'llb_instructor' => array(
        'custom_settings' => TRUE,
      ),
    ),
    'extra_fields' => array(
      'form' => array(
        'title' => array(
          'weight' => '-5',
        ),
      ),
      'display' => array(),
    ),
  ));

  variable_set('menu_options_llb_resource',array());
  variable_set('menu_parent_llb_resource','main-menu:0');
  variable_set('node_options_llb_resource',array());
  variable_set('node_preview_llb_resource','0');
  variable_set('node_submitted_llb_resource',0);

  module_load_include('inc','epe_llb','epe_llb.textfield_filter');
  $filter_format = _epe_llb_textfield_filter();
  $filter_format = (object) $filter_format;
  filter_format_save($filter_format);
}

/*
 * Implement hook_enable
 * this adds epe_image module to epe_content_modules variable which is used in epe_files module
 */
function epe_llb_enable() {
  db_update('system')
    ->fields(array('weight' => 10))
    ->condition('type', 'module')
    ->condition('name', 'epe_llb')
    ->execute();

  $modules = variable_get('EPE_CONTENT_MODULES',array());
  $modules['epe_llb'] = array('content_type' => 'llb_resource', 'resource_browser' => array('label'=>'Lessons','api'=>'llb','adurl'=>'node/add/llb-resource','weight'=>3));
  variable_set('EPE_CONTENT_MODULES', $modules);

  $epe_menu = variable_get('epe_menu',array());

  $node = new stdClass();
  $node->type = "page";
  $node->title = "Lessons";
  $node->language = LANGUAGE_NONE;
  $node->path = array('alias' => 'llb');
  node_object_prepare($node);
  $node->uid = 1;
  $node = node_submit($node);
  node_save($node);
  $epe_menu['llb']['nid'] = $node->nid;

  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Lessons',
    'menu_name' => 'main-menu',
    'weight' => 3,
    'expanded' => 0,
    );
  $epe_menu['llb']['mlid'] = menu_link_save($item);

  variable_set('epe_menu',$epe_menu);

  $item = array(
      'link_path' => 'node/' . $node->nid,
      'link_title' => 'About Lessons',
      'menu_name' => 'main-menu',
      'weight' => 1,
      'expanded' => 0,
      'plid' => $epe_menu['llb']['mlid'],
      );
  menu_link_save($item);

  $item = array(
      'link_path' => 'node/add/llb-resource',
      'link_title' => 'Create a Lesson',
      'menu_name' => 'main-menu',
      'weight' => 2,
      'expanded' => 0,
      'plid' => $epe_menu['llb']['mlid'],
      );
  menu_link_save($item);

  $item = array(
      'link_path' => 'http://' . $_SERVER['HTTP_HOST'] . base_path() . 'resource-browser#/search?filter=author&type=' . $modules['epe_llb']['resource_browser']['api'],
      'link_title' => 'My Lessons',
      'menu_name' => 'main-menu',
      'weight' => 3,
      'expanded' => 0,
      'plid' => $epe_menu['llb']['mlid'],
      );
  menu_link_save($item);

  $item = array(
      'link_path' => 'http://' . $_SERVER['HTTP_HOST'] . base_path() . 'resource-browser#/search?type=' . $modules['epe_llb']['resource_browser']['api'],
      'link_title' => 'Browse Lessons',
      'menu_name' => 'main-menu',
      'weight' => 4,
      'expanded' => 0,
      'plid' => $epe_menu['llb']['mlid'],
      );
  menu_link_save($item);
}

/*
 * Implement hook_disable
 * this remove epe_image module to epe_content_modules variable which is used in epe_files module
 */
function epe_llb_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_llb']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * remove content type and all nodes of video resource content type
 */
function epe_llb_uninstall() {
  $results = db_select('node', 'n')
              ->fields('n', array('nid'))
              ->condition('type', array('llb_resource'), 'IN')
              ->execute();
  foreach ($results as $result) {
    $nids[] = $result->nid;
  }

  if (!empty($nids)) {
    node_delete_multiple($nids);

    foreach($nids as $nid) {
      db_delete('resources_assoc')
      ->condition('parent',$nid)
      ->execute();
    }
  }

  node_type_delete('llb_resource');
  $results = db_select('variable','v')
              ->fields('v',array('name'))
              ->condition('name','%llb_resource%','LIKE')
              ->execute();
  foreach($results as $result) {
    variable_del($result->name);
  }
  variable_del('epe_llb_config');

  node_types_rebuild();
  menu_rebuild();
}

/**
 * Update LLB's "desired assessment" field's required setting.
 */
function epe_llb_update_7000(&$sandbox) {
  $content_type = 'llb_resource';
  $instance = field_read_instance('node','field_desired_assessment',$content_type);
  $instance['required'] = 0;
  field_update_instance($instance);
}

/**
 * EPEDEV-227: Remove all LLB image fields and convert them to standard text field with resource browser functionality
 * Fix view output with change from image field to resource browser
 * EPEDEV-315: Replace "Lessons" with "Investigations" in all menus.
 */
function epe_llb_update_7001(&$sandbox) {
  module_load_include('inc','epe_llb','inc/epe_llb.field_base.update_7001');
  module_load_include('inc','epe_llb','inc/epe_llb.field_instance.update_7001');

  /* delete existing image fields */
  foreach (_epe_llb_field_default_field_bases() as $field) {
    field_delete_field($field['field_name']);
  }

  /* recreate the same field base with text data type */
  foreach (_epe_llb_field_default_field_bases() as $field) {
    if(!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  /* recreate the same field instance with text data type */
  foreach (_epe_llb_field_default_field_instances() as $instance) {
    field_create_instance($instance);
  }

  $body_field_instance = field_info_instance('node','body','llb_resource');
  $body_field_instance['display']['llb_instructor'] = array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 10,
      );
  field_update_instance($body_field_instance);

  $epe_menu = variable_get('epe_menu',array());

  $node = node_load($epe_menu['llb']['nid']);
  $node->title = 'Investigations';
  node_save($node);

  $menu_item = menu_link_load($epe_menu['llb']['mlid']);
  $menu_item['link_title'] = 'Investigations';
  menu_link_save($menu_item);

  $results = db_select('menu_links','a')
            ->fields('a',array('mlid'))
            ->condition('plid',$epe_menu['llb']['mlid'],'=')
            ->execute();
  foreach ($results as $result) {
    $menu_item = menu_link_load($result->mlid);
    $menu_item['link_title'] = str_replace('Lesson', 'Investigation', $menu_item['link_title']);
    menu_link_save($menu_item);
  }

  $view = views_get_view('llb_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['php']['php_output']  = '<?php
        $node = node_load($data->entity);
        $wrapper = entity_metadata_wrapper(\'node\',$node);
        $field_value = $wrapper->field_challenge_thumbnail->value();
        $output = \'\';
    if($field_value) {
      $thumbnail_info = drupal_json_decode($field_value);
      $node = node_load($thumbnail_info[0][\'nid\']);
      $wrapper = entity_metadata_wrapper(\'node\',$node );
      $image = $wrapper->field_image_resource_file->value();
      $output = theme(\'image_style\', array(\'style_name\' => \'resource_browser_thumbnail\', \'path\' => $image[\'uri\']));
    }
    echo render($output);
    ?>';

  views_save_view($view);
}

/**
 * Fix bug where user put in just the LLB title with out anything else and breaks resource browser
 */
function epe_llb_update_7002(&$sandbox) {

  $view = views_get_view('llb_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['php']['php_output']  = '<?php
        $node = node_load($data->entity);
        $wrapper = entity_metadata_wrapper(\'node\',$node);
        $field_value = $wrapper->field_challenge_thumbnail->value();
        $output = \'\';
  if($field_value && $field_value != \'[]\') {
      $thumbnail_info = drupal_json_decode($field_value);
      $node = node_load($thumbnail_info[0][\'nid\']);
      $wrapper = entity_metadata_wrapper(\'node\',$node );
      $image = $wrapper->field_image_resource_file->value();
      $output = theme(\'image_style\', array(\'style_name\' => \'resource_browser_thumbnail\', \'path\' => $image[\'uri\']));
    }
    echo render($output);
?>';

  views_save_view($view);
}

/**
 * Fix challenge thumbnail on LLB teaser view rendering
 */
function epe_llb_update_7003(&$sandbox) {
  $challenge_thumbnail_field_instance = field_info_instance('node','field_challenge_thumbnail','llb_resource');
  $challenge_thumbnail_field_instance['display']['teaser'] = array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 10,
      );
  field_update_instance($challenge_thumbnail_field_instance);
}

/**
 * Make sure the view has the following fields: author name, public status, featured status, and organization
 */
function epe_llb_update_7004(&$sandbox) {
  $view = views_get_view('llb_resource_index', TRUE);
  $view->set_display('default');

  /* Field: Author: Institution / School (indexed) */
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['id'] = 'author_field_account_organization';
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['table'] = 'search_api_index_llb_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['field'] = 'author_field_account_organization';
  $handler->display[$view->current_display]->display_options['fields']['author_field_account_organization']['label'] = 'org';

/* Field: Indexed Node: Featured Status */
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['id'] = 'field_featured_status';
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['table'] = 'search_api_index_llb_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['field'] = 'field_featured_status';
  $handler->display[$view->current_display]->display_options['fields']['field_featured_status']['label'] = 'featured';
  /* Field: Indexed Node: Public Status */
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['id'] = 'field_public_status';
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['table'] = 'search_api_index_llb_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['field'] = 'field_public_status';
  $handler->display[$view->current_display]->display_options['fields']['field_public_status']['label'] = 'public';
  /* Field: Author: Name (indexed) */
  $handler->display[$view->current_display]->display_options['fields']['author_name']['id'] = 'author_name';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['table'] = 'search_api_index_llb_resource_index';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['field'] = 'author_name';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['label'] = 'author_name';
  $handler->display[$view->current_display]->display_options['fields']['author_name']['element_label_colon'] = FALSE;
  $handler->display[$view->current_display]->display_options['fields']['author_name']['link_to_entity'] = 0;

  views_save_view($view);
}

/**
 * add php field for author name to view
 */
function epe_llb_update_7005(&$sandbox) {
  $view = views_get_view('llb_resource_index', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['author_field_account_fname']['exclude'] = TRUE;

  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['exclude'] = TRUE;
  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['label'] = '';
  unset($view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['alter']);

  $view->display[$view->current_display]->display_options['fields']['php_1']['id'] = 'php_1';
  $view->display[$view->current_display]->display_options['fields']['php_1']['table'] = 'views';
  $view->display[$view->current_display]->display_options['fields']['php_1']['field'] = 'php';
  $view->display[$view->current_display]->display_options['fields']['php_1']['label'] = 'author';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_setup'] = 0;
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_output'] = '<?php
  $fullname = array();
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_fname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_fname[\'und\'][0][\'value\'];
  }
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_lname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_lname[\'und\'][0][\'value\'];
  }
  echo implode(\' \',$fullname);
  ?>';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_click_sortable'] = '0';
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_click_sortable'] = '';

  views_save_view($view);
}

/**
 * epedev-360: add resource file field to llb content type
 * epedev-295: turn on default drupal revision setting for LLB
 * epedev-230 create field_source_nid field for llb for clone reference
 */
function epe_llb_update_7006(&$sandbox) {
  module_load_include('inc','epe_llb','inc/epe_llb.field_base.update_7006');
  module_load_include('inc','epe_llb','inc/epe_llb.field_instance.update_7006');

  /* recreate the same field base with text data type */
  foreach (_epe_llb_field_default_field_bases() as $field) {
    if(!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  /* recreate the same field instance with text data type */
  foreach (_epe_llb_field_default_field_instances() as $instance) {
    if(!field_info_instance('node', $instance['field_name'], 'llb_resource')) {
      field_create_instance($instance);
    }
  }

  $llb_resource_options = variable_get('node_options_llb_resource');
  if(!in_array('revision',$llb_resource_options)) {
    $llb_resource_options[] = 'revision';
  }
  variable_set('node_options_llb_resource',$llb_resource_options);

  module_load_include('inc','epe_llb','epe_llb.views_default');
  $view_definition = epe_llb_views_default_views();
  views_save_view($view_definition['llb_resource_index']);
}

/**
 * update multimedia views to support resource browser
 */
function epe_llb_update_7007(&$sandbox) {
  module_load_include('inc','epe_llb','inc/epe_llb.field_base.update_7007');
  module_load_include('inc','epe_llb','inc/epe_llb.field_instance.update_7007');

  /* recreate the same field base with text data type */
  foreach (_epe_llb_field_default_field_bases() as $field) {
    if(!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  /* recreate the same field instance with text data type */
  foreach (_epe_llb_field_default_field_instances() as $instance) {
    if(!field_info_instance('node', $instance['field_name'], 'llb_resource')) {
      field_create_instance($instance);
    }
  }

  $search_api_index = entity_load_single('search_api_index', 'llb_resource_index');

  $search_api_index->options['fields']['search_api_aggregation_1'] = array('type'=>'text');

  $search_api_index->options['data_alter_callbacks']['search_api_alter_add_aggregation'] = array('status'=>1,'weight'=>0,'settings'=>array(
      'fields'=>array('search_api_aggregation_1'=>array(
        'name'=>'title_main_body_fulltext_search',
        'type'=>'fulltext',
        'fields'=>array('title','body:value'),
        'description'=>'A Fulltext aggregation of the following fields: Title, The main body text.',
        ),
      ),
    ),
  );

  $search_api_index->options['processors']['search_api_case_ignore']['settings']['fields']=array('title'=>true, 'body:value'=>true, 'search_api_aggregation_1'=>true);
  $search_api_index->options['processors']['search_api_html_filter']['settings']['fields']=array('title'=>true, 'body:value'=>true,'search_api_aggregation_1'=>true);

  entity_save('search_api_index', $search_api_index);

  module_load_include('inc','epe_llb','epe_llb.views_default');
  $view_definition = epe_llb_views_default_views();
  views_save_view($view_definition['llb_resource_index']);
}

/**
 * epedev-418: add new filter format for llb textfields, and modify existing llb textfield to use the new filter format
 */
function epe_llb_update_7008(&$sandbox) {
  module_load_include('inc','epe_llb','inc/epe_llb.textfield_filter');
  $filter_format = _epe_llb_textfield_filter();
  $filter_format = (object) $filter_format;
  filter_format_save($filter_format);

  $alter_fields = array('body','field_resource_file_note','field_background_content','field_challenge_content','field_explanation_content','field_guidance_content','field_instructional_content','field_introductory_content','field_preconception_content','field_resources_content','field_student_objectives');
  foreach($alter_fields as $alter_field) {
    $field_instance = field_info_instance('node', $alter_field, 'llb_resource');
    $field_instance['settings']['better_formats']['allowed_formats']['filtered_html'] = 0;
    $field_instance['settings']['better_formats']['allowed_formats']['llb_textfield_filter'] = 'llb_textfield_filter';
    field_update_instance($field_instance);
  }
  //administrator, author, moderator
  foreach(array(user_role_load_by_name('administrator'),user_role_load_by_name('author'),user_role_load_by_name('moderator')) as $role) {
    user_role_grant_permissions($role->rid,array('use text format llb_textfield_filter'));
  }

}
