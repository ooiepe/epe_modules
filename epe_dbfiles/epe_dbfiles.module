<?php
 /**
  * Implement hook_permission
  */
function epe_dbfiles_permission() {
  return array(
    'epe dbfiles interface' => array(
      'title' => 'EPE DB File Interface',
      'description' => 'Allow user to use EPE db file interface.',
    ),
  );
}

/**
  * Implement hook_menu
  */
function epe_dbfiles_menu() {
  $items = array();

  //$parent = db_select('menu_links', 'a')->fields('a',array('mlid'))->condition('link_path','db','=')->execute()->fetchAssoc();
  $epe_menu = variable_get('epe_menu',array());

  $items['resource/add'] = array(
    'title' => t('Add a New Resource'),
    'page callback' => 'epe_dbfiles_dynamic_resource_form',
    'access callback' => 'user_access',
    'access arguments' => array('epe dbfiles interface'),
    'type' => MENU_CALLBACK,
    'weight' => 2,
    'plid' => $epe_menu['db']['mlid'],
  );

  $items['resource/add/%'] = array(
    'title' => t('Create EPE File Resource'),
    'page callback' => 'epe_dbfiles_dynamic_resource_form',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'access arguments' => array('epe dbfiles interface'),
    'type' => MENU_CALLBACK,
  );

  $items['dialog/resource/add'] = array(
    'title' => t('Create EPE File Resource'),
    'page callback' => 'epe_dbfiles_dynamic_resource_form',
    'access callback' => 'user_access',
    'access arguments' => array('epe dbfiles interface'),
    'type' => MENU_CALLBACK,
  );

  $items['dialog/resource/add/%'] = array(
    'title' => t('Create EPE File Resource'),
    'page callback' => 'epe_dbfiles_dynamic_resource_form',
    'page arguments' => array(3),
    'access callback' => 'user_access',
    'access arguments' => array('epe dbfiles interface'),
    'type' => MENU_CALLBACK,
  );

  $items['dialog/resource/file/%/success'] = array(
    'title' => t('File Resource Added'),
    'page callback' => 'epe_dbfiles_adhoc_response',
    'page arguments' => array(3),
    'file' => 'epe_dbfiles.form.inc',
    'file path' => drupal_get_path('module', 'epe_dbfiles') . '/inc',
    'access callback' => 'user_access',
    'access arguments' => array('epe dbfiles interface'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function epe_dbfiles_dynamic_resource_form($form_name=NULL) {
  global $user;

  drupal_add_js(drupal_get_path('module','epe_wp') . '/js/epe_wp.form.js');

  $form = array();

  $form['mode'] = array(
    '#type'=>'hidden',
    '#attributes'=>array(
      'class'=>array('form-mode'),
    ),
    '#value'=>arg(0),
  );

  $type_options = array(
    'NULL'=>t('Select a resource type'),
    'image_resource'=>t('Image Resource'),
    'document_resource'=>t('Document Resource'),
    'audio_resource'=>t('Audio Resource'),
    'video_resource'=>t('Video Resource'),
    'web_resource'=>t('Web Multimedia'),
  );

  $form['type_select'] = array(
    '#type'=>'select',
    '#title'=>t('Resource Type'),
    '#options'=>$type_options,
    '#attributes'=>array('class'=>array('resource-type-select')),
  );

  $form['dynamic_form'] = array();

  drupal_add_js(drupal_get_path('module','epe_dbfiles') . '/js/epe_dbfiles.addresource.js');

  if($form_name != NULL) {
  $node_type = $form_name;
  $form['type_select']['#value'] = "{$form_name}";
  drupal_add_css('.form-item .help-block { clear: both; }','inline');
  drupal_add_css('label.control-label { float:left; width:168px; }','inline');
  drupal_add_css('.field-name-body .controls, .form-type-managed-file .controls { margin-left:168px; }','inline');
  module_load_include('inc', 'node', 'node.pages');
  //foreach(array('image_resource','document_resource','audio_resource','video_resource','web_resource') as $node_type) {
    $resource_form_id = $node_type . '_node_form';

    $node = new stdClass();
    $node->type = $node_type;
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $resource_form = drupal_get_form($resource_form_id, $node);
    $resource_form['actions']['submit']['#attributes']['disabled']='disabled';
    $resource_form['author']['name']['#value'] = $user->name;
    $resource_form['author']['date']['#value'] = format_date(time(), 'custom', 'Y-m-d');
    unset($resource_form['actions']['cancel']);

    /*if (!isset($resource_form['#attributes']['class'])) {
      $resource_form['#attributes'] = array('class' => array('hidden'));
    }
    else {
      $resource_form['#attributes']['class'][] = 'hidden';
    }*/

    drupal_add_css('.form-item-permission label { width:100%; }','inline');
    $resource_form['resource_permission'] = array(
      '#type'=>'checkbox',
      '#name'=>'permission',
      '#title' => t('I hereby certify that this resource is either my own work or I have been given permission to use it within an educational context'),
      '#weight'=>5,
      '#attributes'=>array(
        'data-form-id'=>str_replace('_','-',$resource_form_id),
      ),
    );

    //form_load_include($form_state, 'inc', 'node', 'node.pages');
    $form['dynamic_form'][$resource_form_id] = $resource_form;
  //}

  }

  return theme('epe_dbfiles_dynamic_resource_form',array('form'=>$form));
}

function epe_dbfiles_node_presave($node) {
  global $user;

  if($node->uid == drupal_anonymous_user()->uid && user_is_logged_in()) {
    $node->uid = $user->uid;
  }
}

function epe_dbfiles_node_insert($node) {
  if(arg(0) == 'dialog') {
    drupal_goto("dialog/resource/file/{$node->nid}/success");
  }
}

/*
 * implement hook_menu_alter
 * this is to ensure our custom edit form's file field knows how to detail with it's own ajax action
 * without this, add/remove file/thumbnail will break
 */
function epe_dbfiles_menu_alter(&$items) {
  $items['file/ajax']['file'] = 'node.pages.inc';
  $items['file/ajax']['file path'] = drupal_get_path('module', 'node');
}


function epe_dbfiles_requirements_validation() {
  $messages = array();

  //variable set when enabling epe content mdoules
  $depend_modules = variable_get('EPE_CONTENT_MODULES',array());
  if(empty($depend_modules)): $messages[] = 'You must have at the minimum 1 of the file type resource module enabled.'; endif;

  $private_file_scheme = variable_get('file_default_scheme','');
  $private_file_path = variable_get('file_private_path','');

  if(!$private_file_path): $messages[] = 'Please enter a valid Drupal private file system path.'; endif;
  if(!$private_file_scheme): $messages[] = 'Please set Drupal default download method to "Private".'; endif;

  return $messages;
}

function epe_dbfiles_node_view_alter(&$build) {
  $epe_menu = variable_get('epe_menu',array());
  if($build['#view_mode'] == 'full' && $build['#entity_type'] == 'node' && $build['#bundle'] == 'page' && $build['#node']->nid == $epe_menu['db']['nid']) {
    drupal_set_title('Other Resources');
    $build['#post_render'][] = 'epe_dbfiles_homepage_render';
  }
}

/*
 * Implement hook_theme
 * This hook is to style edit form, the theme key needs to be the same as the form function name
 */
function epe_dbfiles_theme() {
  $tpl_path = drupal_get_path('module','epe_dbfiles') . '/templates';
  return array(
    'epe_dbfiles_type_select_form' => array(
      'path' => $tpl_path,
      'template' => 'epe_dbfiles_type_select_form',
      'render element' => 'form',
    ),
    'epe_dbfiles_dynamic_resource_form' => array(
      'path' => $tpl_path,
      'template' => 'epe_dbfiles_dynamic_resource_form',
      'variables' => array(
        'form'=>array(),
      ),
    ),
    'epe_resource_homepage' => array(
      'path' => $tpl_path,
      'template' => 'epe_resource_homepage',
    ),
  );
}

function epe_dbfiles_homepage_render() {
  drupal_add_js(drupal_get_path('module','epe_dbfiles') . '/js/epe_dbfiles.homepage.js');
  return theme('epe_resource_homepage');
}

function epe_dbfiles_block_info() {
  $blocks = array();

  $blocks['epe_resource_featured'] = array(
    'info' => t('EPE Featured File Resources'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

function epe_dbfiles_block_view($delta='') {
  $block = array();

  switch($delta) {
    case 'epe_resource_featured':
      $block['title'] = t('Featured Resources');
      $block['content'] = theme('epe_featured_block',array('type'=>array('image_resource','document_resource','audio_resource','video_resource')));
    break;
  }

  return $block;
}

function _epe_dbfiles_file_storage_location($node) {
  global $user;
  $location = 'private://' . $user->uid . '/' . $node->type . '/' . $node->nid;
  file_prepare_directory($location, FILE_CREATE_DIRECTORY);
  return $location;
}
