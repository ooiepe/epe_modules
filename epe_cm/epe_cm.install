<?php
/**
 * Implements hook_install().
 */
function epe_cm_install() {
  //set content type setting variables when content type is created
  variable_set('comment_anonymous_cm_resource',0);
  variable_set('comment_default_mode_cm_resource',1);
  variable_set('comment_default_per_page_cm_resource','50');
  variable_set('comment_form_location_cm_resource',1);
  variable_set('comment_cm_resource','2');
  variable_set('comment_preview_cm_resource','0');
  variable_set('comment_subject_field_cm_resource',1);
  variable_set('field_bundle_settings_node__cm_resource',array(
    'view_modes' => array(),
    'extra_fields' => array(
      'form' => array(
        'title' => array(
          'weight' => '-5',
        ),
      ),
      'display' => array(),
    ),
  ));
  variable_set('menu_options_cm_resource',array());
  variable_set('menu_parent_cm_resource','main-menu:0');
  variable_set('node_options_cm_resource',array());
  variable_set('node_preview_cm_resource','0');
  variable_set('node_submitted_cm_resource',0);
}

/*
 * Implement hook_enable
 * this adds [your module name] module to epe_content_modules variable which is used in epe_files module
 */
function epe_cm_enable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  /*
   * resource_name: identifing which file resource type this module is (use in dbfiles) (if not use in dbfiles, this can just be content type name)
   * resource_type: identifing whether module is part of db file resource type or not (use in dbfiles) (expected value: file or anything else)
   * resource_browser_tab: indentify this content type should be apart of resource browser and some resource browser specific attributes (resource browser module is expacting the api to be api/resource/[api name] for the list of resources and api/resource/[api name]/% for individual resource information)
   */
 /* $modules['epe_cm'] = array('resource_name' => 'Concept Maps','resource_type' => 'cm_resource', 'resource_browser_tab' => array('label'=>'Concept Maps','api'=>'cm','default'=>FALSE,'order'=>1));
  variable_set('EPE_CONTENT_MODULES', $modules);*/

  $modules['epe_cm'] = array('content_type' => 'cm_resource','resource_browser' => array('api'=>'cm','adurl'=>'node/add/cm-resource','weight'=>1));
  variable_set('EPE_CONTENT_MODULES', $modules);

}

/*
 * Implement hook_disable
 * this remove [your module name] module to epe_content_modules variable which is used in epe_files module
 */
function epe_cm_disable() {
  $modules = variable_get('EPE_CONTENT_MODULES',array());
  unset($modules['epe_cm']);
  variable_set('EPE_CONTENT_MODULES', $modules);
}

/*
 * remove content type and all nodes of image resource content type
 */
function epe_cm_uninstall() {
  $results = db_select('node', 'n')
              ->fields('n', array('nid'))
              ->condition('type', array('cm_resource'), 'IN')
              ->execute();
  foreach ($results as $result) {
    $nids[] = $result->nid;
  }

  if (!empty($nids)) {
    node_delete_multiple($nids);
  }

  node_type_delete('cm_resource');
  $results = db_select('variable','v')
              ->fields('v',array('name'))
              ->condition('name','%cm_resource%','LIKE')
              ->execute();
  foreach($results as $result) {
    variable_del($result->name);
  }

  node_types_rebuild();
  menu_rebuild();
}

/**
 * Make sure the view has the following fields: author name, public status, featured status, and organization
 */
function epe_cm_update_7000(&$sandbox) {
  $view = views_get_view('epe_cm_search_view', TRUE);
  $view->set_display('default');

  /* Field: Author: Institution / School (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['id'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['field'] = 'author_field_account_organization';
  $view->display[$view->current_display]->display_options['fields']['author_field_account_organization']['label'] = 'org';

  /* Field: Indexed Node: Featured Status */
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['id'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['field'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['fields']['field_featured_status']['label'] = 'featured';
  /* Field: Indexed Node: Public Status */
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['id'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['field'] = 'field_public_status';
  $view->display[$view->current_display]->display_options['fields']['field_public_status']['label'] = 'public';
  /* Field: Author: Name (indexed) */
  $view->display[$view->current_display]->display_options['fields']['author_name']['id'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display[$view->current_display]->display_options['fields']['author_name']['field'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['label'] = 'author_name';
  $view->display[$view->current_display]->display_options['fields']['author_name']['element_label_colon'] = FALSE;
  $view->display[$view->current_display]->display_options['fields']['author_name']['link_to_entity'] = 0;

  views_save_view($view);
}

/**
 * add php field for author name to view
 */
function epe_cm_update_7001(&$sandbox) {
  $view = views_get_view('epe_cm_search_view', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['fields']['author_field_account_fname']['exclude'] = TRUE;

  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['exclude'] = TRUE;
  $view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['label'] = '';
  unset($view->display[$view->current_display]->display_options['fields']['author_field_account_lname']['alter']);

  $view->display[$view->current_display]->display_options['fields']['php_1']['id'] = 'php_1';
  $view->display[$view->current_display]->display_options['fields']['php_1']['table'] = 'views';
  $view->display[$view->current_display]->display_options['fields']['php_1']['field'] = 'php';
  $view->display[$view->current_display]->display_options['fields']['php_1']['label'] = 'author';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_setup'] = 0;
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_output'] = '<?php
  $fullname = array();
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_fname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_fname[\'und\'][0][\'value\'];
  }
  if( !empty($data->_entity_properties[\'author:entity object\']->field_account_lname) ) {
    $fullname[] = $data->_entity_properties[\'author:entity object\']->field_account_lname[\'und\'][0][\'value\'];
  }
  echo implode(\' \',$fullname);
  ?>';
  $view->display[$view->current_display]->display_options['fields']['php_1']['use_php_click_sortable'] = '0';
  $view->display[$view->current_display]->display_options['fields']['php_1']['php_click_sortable'] = '';

  views_save_view($view);
}

/**
 * epedev-286 enable cm resource revision tracking
 * epedev-230 create field_source_nid field for cm for clone reference
 */
function epe_cm_update_7003(&$sandbox) {

  module_load_include('inc','epe_cm','inc/epe_cm.field_base.update_7003');
  module_load_include('inc','epe_cm','inc/epe_cm.field_instance.update_7003');
  // Create all the fields we are adding to our content type.
  foreach (_cm_resource_installed_fields() as $field) {
    //in case content type share fields
    if(!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  // Create all the instances for our fields.
  foreach (_cm_resource_installed_instances() as $instance) {
    if(!field_info_instance('node',$instance['field_name'],'cm_resource')) {
      field_create_instance($instance);
    }
  }

  $search_api_index = entity_load_single('search_api_index', 'epe_cm_search_index');
  $search_api_index->options['fields']['title'] = array('type'=>'string');
  entity_save('search_api_index', $search_api_index);

  $view = views_get_view('epe_cm_search_view', TRUE);
  $view->set_display('default');

  $view->display[$view->current_display]->display_options['pager']['type'] = 'full';
  $view->display[$view->current_display]->display_options['pager']['options']['items_per_page'] = '10';
  $view->display[$view->current_display]->display_options['pager']['options']['offset'] = '0';
  $view->display[$view->current_display]->display_options['pager']['options']['id'] = '0';
  $view->display[$view->current_display]->display_options['pager']['options']['quantity'] = '9';

  /* Filter criterion: Indexed Node: Featured Status */
  $view->display[$view->current_display]->display_options['filters']['field_featured_status']['id'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['filters']['field_featured_status']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display[$view->current_display]->display_options['filters']['field_featured_status']['field'] = 'field_featured_status';
  $view->display[$view->current_display]->display_options['filters']['field_featured_status']['value'] = array(
    'Not-Featured' => 'Not-Featured',
    'Featured' => 'Featured',
  );
  $view->display[$view->current_display]->display_options['filters']['field_featured_status']['group'] = 2;

  /* Sort criterion: Indexed Node: Title */
  $view->display[$view->current_display]->display_options['sorts']['title']['id'] = 'title';
  $view->display[$view->current_display]->display_options['sorts']['title']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display[$view->current_display]->display_options['sorts']['title']['field'] = 'title';
  $view->display[$view->current_display]->display_options['sorts']['title']['exposed'] = TRUE;
  $view->display[$view->current_display]->display_options['sorts']['title']['expose']['label'] = 'Title';

  /* Display: RESTful API for Logged In User */
  $view->new_display('block', 'RESTful API for Logged In User', 'my_list');

  $view->display['my_list']->display_options['defaults']['arguments'] = FALSE;
  /* Contextual filter: Author: User ID (indexed) */
  $view->display['my_list']->display_options['arguments']['author_uid']['id'] = 'author_uid';
  $view->display['my_list']->display_options['arguments']['author_uid']['table'] = 'search_api_index_epe_cm_search_index';
  $view->display['my_list']->display_options['arguments']['author_uid']['field'] = 'author_uid';
  $view->display['my_list']->display_options['arguments']['author_uid']['default_action'] = 'default';
  $view->display['my_list']->display_options['arguments']['author_uid']['default_argument_type'] = 'current_user';
  $view->display['my_list']->display_options['arguments']['author_uid']['summary']['format'] = 'default_summary';
  $view->display['my_list']->display_options['arguments']['author_uid']['break_phrase'] = 0;
  $view->display['my_list']->display_options['arguments']['author_uid']['not'] = 0;

  views_save_view($view);
}


function epe_cm_update_7004(&$sandbox) {

  module_load_include('inc','epe_cm','epe_cm.views_default');
  $view_definition = epe_cm_views_default_views();
  views_save_view($view_definition['epe_cm_search_view']);

}


/**
 * update cm views to support resource browser
 */
function epe_cm_update_7005(&$sandbox) {
  $search_api_index = entity_load_single('search_api_index', 'epe_cm_search_index');

  $search_api_index->options['fields']['search_api_aggregation_1'] = array('type'=>'text');

  $search_api_index->options['data_alter_callbacks']['search_api_alter_add_aggregation'] = array('status'=>1,'weight'=>0,'settings'=>array(
      'fields'=>array('search_api_aggregation_1'=>array(
        'name'=>'title_main_body_fulltext_search',
        'type'=>'fulltext',
        'fields'=>array('title','body:value'),
        'description'=>'A Fulltext aggregation of the following fields: Title, The main body text.',
        ),
      ),
    ),
  );

  $search_api_index->options['processors']['search_api_case_ignore']['settings']['fields']=array('title'=>true, 'body:value'=>true, 'search_api_aggregation_1'=>true);
  $search_api_index->options['processors']['search_api_html_filter']['settings']['fields']=array('title'=>true, 'body:value'=>true,'search_api_aggregation_1'=>true);

  entity_save('search_api_index', $search_api_index);

  module_load_include('inc','epe_cm','epe_cm.views_default');
  $view_definition = epe_cm_views_default_views();
  views_save_view($view_definition['epe_cm_search_view']);
}


/**
 * patches a problem with the cm thumbnail creation/viewing
 */
function epe_cm_update_7006(&$sandbox) {
  module_load_include('inc','epe_cm','epe_cm.views_default');
}
